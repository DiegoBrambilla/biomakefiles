# makefile.megan
#
# Library makefile to make running command line MEGAN simpler.
#
# Include the full path of this file in your Makefile.
#
# Author: daniel.lundin@lnu.se

SHELL := /bin/bash

# *** Parameters ***

# Important to override if you don't have your megan mapping files in a subdirectory of
# the current directory called megan (or a symlink). Also note that mapping files should
# be named (directly or via symlinks): prot_acc2tax.abin, acc2eggnog.abin, acc2interpro.abin
# and acc2seed.abin respectively for the different databases.
MEGAN_MAPS_DIR = megan

# Needs to be overridden if you have MEGAN installed in e.g. /opt/megan.
#
# Unfortunately, one can't just create a symlink in /usr/local/bin for
# daa-meganizer because the script is not written for that. I chose to define
# this variable instead of advising people to have the tools directory in their
# paths.
MEGAN_INSTALL_DIR = /usr/local/megan

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.
#
MEGANIZE_OPTS = --lcaAlgorithm weighted

BLAST2RMA_MAF_OPTS = --lcaAlgorithm naive --acc2taxa $(MEGAN_MAPS_DIR)/nucl_acc2tax.abin

# *** Internal ***

# MAKECALL_MEGAN is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_MGNZR_VERS  = echo "`date +"%Y%m%d %H:%M:%S"`: $@ was made with daa-meganizer $$($(MEGAN_INSTALL_DIR)/tools/daa-meganizer -h 2>&1 |grep -o 'version [0-9.]*')" > $@.makecall
MAKECALL_PARAMS      = echo "	Called with parameters: $(MEGAN_OPTS)" >> $@.makecall
MAKECALL_INFILES     = echo "	Input files: $^ (`ls -lL $^|tr '\n' ','`)" >> $@.makecall
MEGANIZE_MAPS        = echo "	MEGAN maps: `ls -lL $(MEGAN_MAPS_DIR)/*.abin`" >> $@.makecall
MAKECALL_MEGANIZE    = $(MAKECALL_MGNZR_VERS); $(MAKECALL_PARAMS); $(MAKECALL_INFILES); $(MEGANIZE_MAPS)

# *** Targets ***

meganize_all: $(subst .daa,.daa.meganize.out,$(wildcard *.daa))

%.daa.meganize.out: %.daa
	$(MAKECALL_MEGANIZE)
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/daa-meganizer --in $< \
	  --function EGGNOG INTERPRO2GO SEED \
	  --acc2taxa $(MEGAN_MAPS_DIR)/prot_acc2tax.abin \
	  --acc2eggnog $(MEGAN_MAPS_DIR)/acc2eggnog.abin \
	  --acc2interpro2go $(MEGAN_MAPS_DIR)/acc2interpro.abin \
	  --acc2seed $(MEGAN_MAPS_DIR)/acc2seed.abin \
	  $(MEGANIZE_OPTS) > $@ 2>&1
	echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

# ** Exports **

# Macro for temporary (MEGAN 6.6.3) filtering of header lines. Will be replaced
# by -n option in next release (won't do any harm after that).
DAA2INFO_HEADER_FILTER = grep -v "^Version"|grep -v "^Author"|grep -v "^Copyright"|grep -v "^Loading"|grep -v "^\#"

all_exports: all_reads2eggnogs all_reads2ips all_reads2seeds all_reads2taxonids

mostly_hiearchy_exports: all_reads2taxonids all_reads2eggnoghiers all_reads2iphiers all_reads2seedhiers

all_reads2eggnogs: $(subst .daa,.reads2eggnogs.tsv.gz,$(wildcard *.daa)) all_reads2eggnoghiers all_reads2iphiers all_reads2seedhiers

%.reads2eggnogs.tsv.gz: %.daa
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/daa2info --in $< \
	  -r2c EGGNOG --names --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_reads2eggnoghiers: $(subst .daa,.reads2eggnoghiers.tsv.gz,$(wildcard *.daa))

%.reads2eggnoghiers.tsv.gz: %.daa
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/daa2info --in $< \
	  -r2c EGGNOG --paths --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_reads2ips: $(subst .daa,.reads2ips.tsv.gz,$(wildcard *.daa))

%.reads2ips.tsv.gz: %.daa
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/daa2info --in $< \
	  -r2c INTERPRO2GO --names --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_reads2iphiers: $(subst .daa,.reads2iphiers.tsv.gz,$(wildcard *.daa))

%.reads2iphiers.tsv.gz: %.daa
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/daa2info --in $< \
	  -r2c INTERPRO2GO --paths --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_reads2seeds: $(subst .daa,.reads2seeds.tsv.gz,$(wildcard *.daa))

%.reads2seeds.tsv.gz: %.daa
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/daa2info --in $< \
	  -r2c SEED --names --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_reads2seedhiers: $(subst .daa,.reads2seedhiers.tsv.gz,$(wildcard *.daa))

%.reads2seedhiers.tsv.gz: %.daa
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/daa2info --in $< \
	  -r2c SEED --paths --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_reads2taxonids: $(subst .daa,.reads2taxonids.tsv.gz,$(wildcard *.daa))

%.reads2taxonids.tsv.gz: %.daa
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/daa2info --in $< \
	  -r2c Taxonomy | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_rma_exports: all_rma_reads2eggnogs all_rma_reads2ips all_rma_reads2seeds all_rma_reads2taxonids

all_rma_reads2eggnogs: $(subst .rma6,.reads2eggnogs.tsv.gz,$(wildcard *.rma6)) all_rma_reads2eggnoghiers all_rma_reads2iphiers all_rma_reads2seedhiers

%.reads2eggnogs.tsv.gz: %.rma6
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/rma2info --in $< \
	  -r2c EGGNOG --names --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_rma_reads2eggnoghiers: $(subst .rma6,.reads2eggnoghiers.tsv.gz,$(wildcard *.rma6))

%.reads2eggnoghiers.tsv.gz: %.rma6
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/rma2info --in $< \
	  -r2c EGGNOG --paths --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_rma_reads2ips: $(subst .rma6,.reads2ips.tsv.gz,$(wildcard *.rma6))

%.reads2ips.tsv.gz: %.rma6
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/rma2info --in $< \
	  -r2c INTERPRO2GO --names --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_rma_reads2iphiers: $(subst .rma6,.reads2iphiers.tsv.gz,$(wildcard *.rma6))

%.reads2iphiers.tsv.gz: %.rma6
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/rma2info --in $< \
	  -r2c INTERPRO2GO --paths --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_rma_reads2seeds: $(subst .rma6,.reads2seeds.tsv.gz,$(wildcard *.rma6))

%.reads2seeds.tsv.gz: %.rma6
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/rma2info --in $< \
	  -r2c SEED --names --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_rma_reads2seedhiers: $(subst .rma6,.reads2seedhiers.tsv.gz,$(wildcard *.rma6))

%.reads2seedhiers.tsv.gz: %.rma6
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/rma2info --in $< \
	  -r2c SEED --paths --list | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

all_rma_reads2taxonids: $(subst .rma6,.reads2taxonids.tsv.gz,$(wildcard *.rma6))

%.reads2taxonids.tsv.gz: %.rma6
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/rma2info --in $< \
	  -r2c Taxonomy | $(DAA2INFO_HEADER_FILTER) | gzip -c > $@

###%.rma6: %.maf.gz
###	-xvfb-run --auto-servernum --server-num=1 \
###	  $(MEGAN_INSTALL_DIR)/tools/blast2rma --in $< \
###	  --out $@ \
###	  --format LastMAF \
###	  --blastMode BlastN \
###	  $(BLAST2RMA_MAF_OPTS)

%.rma6: %.megantab.gz
	-xvfb-run --auto-servernum --server-num=1 \
	  $(MEGAN_INSTALL_DIR)/tools/blast2rma --in $< \
	  --out $@ \
	  --format BlastTab \
	  --blastMode BlastN \
	  $(BLAST2RMA_MAF_OPTS)

diamond-megan.stats.long.tsv: $(wildcard *.meganize.out)
	for f in $^; do \
	  s=$$(echo $$f|sed 's/\..*//'); \
	  echo "$(STAT_ORDER)   diamond-megan   $$s    MEGAN reads $$(basename $$f '.meganize.out')   $$(grep 'Total reads:' $$f|sed 's/,//g'|sed 's/[^0-9]*//g')"; \
	  echo "$(STAT_ORDER)   diamond-megan   $$s    MEGAN taxonomy $$(basename $$f '.meganize.out')   $$(grep 'Assig. Taxonomy:' $$f|sed 's/,//g'|sed 's/[^0-9]*//g')"; \
	  echo "$(STAT_ORDER)   diamond-megan   $$s    MEGAN ip2go $$(basename $$f '.meganize.out')   $$(grep 'Assig. INTERPRO2GO:' $$f|sed 's/,//g'|sed 's/[^0-9]*//g')"; \
	  echo "$(STAT_ORDER)   diamond-megan   $$s    MEGAN eggnog $$(basename $$f '.meganize.out')   $$(grep 'Assig. EGGNOG:' $$f|sed 's/,//g'|sed 's/[^0-9]*//g')"; \
	  echo "$(STAT_ORDER)   diamond-megan   $$s    MEGAN seed $$(basename $$f '.meganize.out')   $$(grep 'Assig. SEED:' $$f|sed 's/,//g'|sed 's/[^0-9]*//g')"; \
	done > $@
