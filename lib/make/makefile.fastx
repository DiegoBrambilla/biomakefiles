# makefile.fastx
#
# Library makefile to make running the programs from the FastX collection
# simpler.
#
# Include the full path of this file in your Makefile ...
#
# Author: erik.rikard.daniel@gmail.com

SHELL := /bin/bash

# *** Parameters ***

# *** Internal ***

# MAKECALL_FASTX is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_VERSION     = echo "`date +"%Y%m%d %H:%M:%S"`: $@ was made with `fastx_collapser -h | grep 'Part of'`" > $@.makecall
MAKECALL_INFILES     = echo "	Input files: $^ (`ls -l $^|tr '\n' ','`)" >> $@.makecall
MAKECALL_FASTX      = $(MAKECALL_VERSION); $(MAKECALL_INFILES)

# *** Targets ***

# Run the fastx_collapser on all fastq.gz files.
#
# I want to keep the .r1/2.fastq.gz suffix, so have to make separate targets
# for the r1 and r2 read files respectively.
fastq2collapse: $(subst .r1.fastq.gz,.collapse.r1.fastq.gz,$(wildcard *.r1.fastq.gz)) $(subst .r2.fastq.gz,.collapse.r2.fastq.gz,$(wildcard *.r2.fastq.gz))

# The macro that does the job
FASTX_COLLAPS = gunzip -c $< | fastx_collapser | gzip -c > $@

%.collapse.r1.fastq.gz: %.r1.fastq.gz
	$(MAKECALL_FASTX)
	$(FASTX_COLLAPS)
	echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.collapse.r2.fastq.gz: %.r2.fastq.gz
	$(MAKECALL_FASTX)
	$(FASTX_COLLAPS)
	echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall
