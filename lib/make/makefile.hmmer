# makefile.hmmer
#
# Library makefile to make running hmmer simpler.
#
# Include the full path of this file in your Makefile ...
#
# Author: daniel.lundin@lnu.se

SHELL := /bin/bash

# *** Parameters ***

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.
#
HMMSEARCH_OPTS =
HMMRANK_OPTS =

# *** Internal ***

# MAKECALLHMMSEARCH is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_VERSION       = echo "`date +"%Y%m%d %H:%M:%S"`: $@ was made with `hmmsearch -h|grep -o 'HMMER [0-9][^ ]*'`" > $@.makecall
MAKECALL_SEARCH_PARAMS = echo "	Called with parameters: $(HMMSEARCH_OPTS)" >> $@.makecall
MAKECALL_INFILES       = echo "	Input files: $^ (`ls -l $^|tr '\n' ','`)" >> $@.makecall
MAKECALL_HMMSEARCH     = $(MAKECALL_VERSION); $(MAKECALL_SEARCH_PARAMS); $(MAKECALL_INFILES)

# This one *must* be set to point to a fasta file with amino acid sequences.
# To work with gzipped .faa files, set to something like: "<(gunzip -c file.faa.gz)"
HMMER_DB_FAA = NEEDS TO BE SET TO A FASTA FILE WITH AMINO ACIDS!

HMMER_OPTS =

# *** Internal ***

# MAKECALL_HMMER is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_HMMER_VERSION     = echo "`date +"%Y%m%d %H:%M:%S"`: $@ was made with $(hmmsearch -h|grep HMMER)" > $@.makecall
MAKECALL_HMMER_PARAMS      = echo "	Called with parameters: $(HMMER_OPTS)" >> $@.makecall
MAKECALL_HMMER_INFILES     = echo "	Input files: $^ (`ls -lL $^|tr '\n' ','`)" >> $@.makecall
MAKECALL_HMMER             = $(MAKECALL_HMMER_VERSION); $(MAKECALL_HMMER_PARAMS); $(MAKECALL_HMMER_INFILES)

# *** Targets ***

all_hmmout: $(subst .hmm,.hmmout,$(wildcard *.hmm))

# This target requires that "hmmrank", a symlink to "hmmrank.r" from 
# https://github.com/erikrikarddaniel/hmmrank is in your PATH.
all.ranked.tsv: $(wildcard *.tblout)
	hmmrank --verbose --outfile=$@ $(HMMRANK_OPTS) $^

%.hmmout: %.hmm
	@$(MAKECALL_HMMER)
	hmmsearch \
	  --tblout=$(basename $@).tblout \
	  --domtblout=$(basename $@).domtblout \
	  $(HMMER_OPTS) \
	  $< $(HMMER_DB_FAA) \
	  > $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

# Runs hmmsearch for all combinations of .faa and .hmm files in the directory
hmmsearch_loop:
	for faa in *.faa; do \
	  bsfaa=$$(basename $$faa .faa); \
	  for hmm in *.hmm; do \
	    bshmm=$$(basename $$hmm .hmm); \
	    bs="$$bsfaa.$$bshmm"; \
	    hmmsearch \
	      -o $$bs.hmmout \
	      --tblout=$$bs.tblout \
	      --domtblout=$$bs.domtblout \
	      $$hmm $$faa \
	      $(HMMER_OPTS); \
	  done; \
	done
	touch $@

# Count hits per hmm, report only > 0
hmmer.counts.tsv: $(subst .hmm,.counts.tsv,$(wildcard *.hmm))
	for f in $^; do \
	  echo "--> $$f <--"; \
	  sort -nr -k 2 $$f; \
	done > $@

%.counts.tsv: %.hmm
	for f in *.$(basename $<).tblout; do \
	  n=$$(grep -v '^#' $$f|wc -l); \
	  if [ $$n -gt 0 ]; then \
	    echo "$$f	$$n"; \
	  fi; \
	done > $@

# Statistics files
pfile_accept_scores.tsv: $(wildcard *.hmm)
	echo "pfile	score_type	seq_score	domain_score" > $@
	grep '^\(GA\)\|\(TC\)\|\(NC\)' $^ | sed 's/:/\t/' | sed 's/ \+/\t/g' | sed 's/;$$//' >> $@

pfile_profiles.tsv: $(wildcard *.hmm)
	echo "pfile	profile" > $@
	grep '^NAME' $^ | sed 's/:NAME */\t/' >> $@

pfile_descs.tsv: $(wildcard *.hmm)
	echo "pfile	description" > $@
	grep '^DESC' $^ | sed 's/:DESC */\t/' >> $@

profile_accept_scores.tsv: pfile_profiles.tsv pfile_accept_scores.tsv pfile_descs.tsv
	Rscript --default-packages=readr,dplyr -e "read_tsv('$<',col_types=cols(.default=col_character()))%>%inner_join(read_tsv('$(word 2,$^)',col_types=cols(.default=col_character())),by='pfile')%>%inner_join(read_tsv('$(word 3,$^)',col_types=cols(.default=col_character())),by='pfile')%>%write_tsv('$@')"

