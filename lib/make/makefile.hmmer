# makefile.hmmer
#
# Library makefile to make running hmmer simpler.
#
# Include the full path of this file in your Makefile ...
#
# Author: daniel.lundin@lnu.se

SHELL := /bin/bash

# *** Parameters ***

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.
#
# This one *must* be set to point to a fasta file with amino acid sequences.
HMMER_DB_FAA = NEEDS TO BE SET TO A FASTA FILE WITH AMINO ACIDS!

HMMER_OPTS =

# *** Internal ***

# MAKECALL_HMMER is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_HMMER_VERSION     = echo "`date +"%Y%m%d %H:%M:%S"`: $@ was made with $(hmmsearch -h|grep HMMER)" > $@.makecall
MAKECALL_HMMER_PARAMS      = echo "	Called with parameters: $(HMMER_OPTS)" >> $@.makecall
MAKECALL_HMMER_INFILES     = echo "	Input files: $^ (`ls -lL $^|tr '\n' ','`)" >> $@.makecall
MAKECALL_HMMER             = $(MAKECALL_HMMER_VERSION); $(MAKECALL_HMMER_PARAMS); $(MAKECALL_HMMER_INFILES)

# *** Targets ***

all_hmmout: $(subst .hmm,.hmmout,$(wildcard *.hmm))

%.hmmout: %.hmm
	@$(MAKECALL_HMMER)
	hmmsearch \
	  --tblout=$(basename $@).tblout \
	  --domtblout=$(basename $@).domtblout \
	  $< $(HMMER_DB_FAA) \
	  $(HMMER_OPTS) \
	  > $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

# Runs hmmsearch for all combinations of .fna and .hmm files in the directory
hmmsearch_loop:
	for faa in *.faa; do \
	  bsfaa=$$(basename $$faa .faa); \
	  for hmm in *.hmm; do \
	    bshmm=$$(basename $$hmm .hmm); \
	    bs="$$bsfaa.$$bshmm"; \
	    hmmsearch \
	      -o $$bs.hmmout \
	      --tblout=$$bs.tblout \
	      --domtblout=$$bs.domtblout \
	      $$hmm $$faa \
	      $(HMMER_OPTS); \
	  done; \
	done
	touch $@

# Count hits per hmm, report only > 0
all.counts.tsv: $(subst .hmm,.counts.tsv,$(wildcard *.hmm))
	for f in $^; do \
	  echo "--> $$f <--"; \
	  sort -nr -k 2 $$f; \
	done > $@

%.counts.tsv: %.hmm
	for f in *.$(basename $<).tblout; do \
	  n=$$(grep -v '^#' $$f|wc -l); \
	  if [ $$n -gt 0 ]; then \
	    echo "$$f	$$n"; \
	  fi; \
	done > $@
