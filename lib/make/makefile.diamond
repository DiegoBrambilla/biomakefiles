# makefile.diamond
#
# Library makefile to make running the Diamond aligner simpler.
#
# Include the full path of this file in your Makefile and making databases and
# running the aligner can be done via make. See documentation in in
# the biomakefile Git repository: doc/makefile.md and documentation for
# individual targets below.
#
# Author: erik.rikard.daniel@gmail.com

SHELL := /bin/bash

# *** Parameters ***

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.
#
# DIAMOND_DB_PATH sets the directory where to look for the database files. The
# default is the current directory.
DIAMOND_DB_PATH = .

# DIAMOND_ALIGN_OPTS sets non-essential parameters for diamond alignment
#
# See the Diamond documentation available at GitHub:
# https://github.com/bbuchfink/diamond. 
#
# Look particularly at options for sensitivity, scoring and memory and
# performance.
#
# To set options, override this by inserting a row similar to the one below but
# with whatever options you'd like to add in your Makefile *after* you include
# this file.
DIAMOND_ALIGN_OPTS = 

# *** Internal ***

# MAKECALL_DIAMOND is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_VERSION     = echo "`date +"%Y-%m-%s %H:%M:%S"`: $@ was made with `diamond --version`" > $@.makecall
MAKECALL_PARAMS      = echo "	Called with parameters: $(DIAMOND_ALIGN_OPTS)" >> $@.makecall
MAKECALL_DB_RFP      = echo "	Database: $(DIAMOND_DB_PATH)/refseq_protein (`ls -lL $(DIAMOND_DB_PATH)/refseq_protein.dmnd`)" >> $@.makecall
MAKECALL_INFILES     = echo "	Input files: $^ (`ls -lL $^|tr '\n' ','`)" >> $@.makecall
MAKECALL_DIAMOND_RFP = $(MAKECALL_VERSION); $(MAKECALL_PARAMS); $(MAKECALL_DB_RFP); $(MAKECALL_INFILES)
MAKECALL_MAKEDB      = $(MAKECALL_VERSION); $(MAKECALL_INFILES)

# *** Targets ***

# Running the Diamond aligner

# Nucleotides in fastq.gz file against the NCBI RefSeq protein database
fastq.gz2refseq_protein.daas: $(subst .fastq.gz,.refseq_protein.daa,$(wildcard *.fastq.gz))

%.refseq_protein.daa: %.fastq.gz
	$(MAKECALL_DIAMOND_RFP)
	diamond blastx -f 100 -d $(DIAMOND_DB_PATH)/refseq_protein --query $< -o $@ $(DIAMOND_ALIGN_OPTS)
	echo "`date +"%Y-%m-%s %H:%M:%S"`: DONE" >> $@.makecall

# Nucleotides in fna.gz file against the NCBI RefSeq protein database
fna.gz2refseq_protein.daas: $(subst .fna.gz,.refseq_protein.daa,$(wildcard *.fna.gz))

%.refseq_protein.daa: %.fna.gz
	$(MAKECALL_DIAMOND_RFP)
	diamond blastx -f 100 -d $(DIAMOND_DB_PATH)/refseq_protein --query $< -o $@ $(DIAMOND_ALIGN_OPTS)
	echo "`date +"%Y-%m-%s %H:%M:%S"`: DONE" >> $@.makecall

# Protein sequences in faa.gz file against the NCBI RefSeq protein database
%.refseq_protein.daa: %.faa.gz
	$(MAKECALL_DIAMOND_RFP)
	diamond blastp -f 100 -d $(DIAMOND_DB_PATH)/refseq_protein --query $< -o $@ $(DIAMOND_ALIGN_OPTS)
	echo "`date +"%Y-%m-%s %H:%M:%S"`: DONE" >> $@.makecall

# Creating the database

# From protein sequences in a file ending with .faa
# (Currently, Diamond only works with protein sequence databases.)
%.dmnd: %.faa
	$(MAKECALL_MAKEDB)
	diamond makedb --in $< -d $(basename $@)
	echo "`date +"%Y-%m-%s %H:%M:%S"`: DONE" >> $@.makecall
