# makefile.misc
#
# Library makefile containing various simple pattern rules which doesn't fit
# anywhere else.
#
# Include the full path of this file in your Makefile ...
#
# Author: erik.rikard.daniel@gmail.com

SHELL := /bin/bash

# *** Targets ***

# Create unzipped versions of all fastq.gz files
gunzip_all_fastq.gzs: $(subst .fastq.gz,.fastq,$(wildcard *.fastq.gz))

# This is different from normal "gunzip *.gz" in that it creates a *new file*.
%.fastq: %.fastq.gz
	gunzip -c $< > $@

# Interleave two fastq files (named %.r1.fastq and %.r2.fastq respectively).
#
# The target uses a python script -- interleave_fastq.py -- cloned from this
# gist:
#
#   https://gist.github.com/rpucheq/cf50eeea794529ca6b0e
#
# Dependencies will automatically be unzipped if not present in unzipped format
# thanks to the pattern above. Unzipped files will be deleted after
# interleaving.
interleave_all_fastq.gzs: $(subst .r1.fastq.gz,.intlv.fastq.gz,$(wildcard *.r1.fastq.gz))

%.intlv.fastq.gz: %.r1.fastq %.r2.fastq
	interleave_fastq.py $^ | gzip -c > $@

# The same, but not zipping
interleave_all_fastqs: $(subst .r1.fastq,.intlv.fastq,$(wildcard *.r1.fastq))

%.intlv.fastq: %.r1.fastq %.r2.fastq
	interleave_fastq.py $^ > $@

# Clean up a fasta file so that names does not contain spaces, dashes and other
# characters that cause problems in various programs. Also places sequences on
# one line so that one can more easily select sequences with grep.
CLEAN_FASTA = awk '/^>/ {printf("\n%s\n",$$0);next; } { printf("%s",$$0);} END {printf("\n");}' $< | sed '/^$$/d' | sed '/^>/s/[ \t]\+/_/g' | sed '/^>/s/[-(),:;+|]//g' > $@

%.c.fna: %.fna
       $(CLEAN_FASTA)

%.c.faa: %.faa
       $(CLEAN_FASTA)
