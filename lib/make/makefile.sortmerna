# makefile.sortmerna
#
# Library makefile to make running sortmerna simpler.
#
# Include the full path of this file in your Makefile ...
#
# Author: erik.rikard.daniel@gmail.com

SHELL := /bin/bash

# *** Parameters ***

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.
#
# This must be defined and point to a directory with *only* rRNA reference
# files. All will be used by sortmerna.
SORTMERNA_DBPATH =

# Any other options not set by default
SORTMERNA_OPTS = 

# Sets options for the indexdb_rna call (see indexdb_rna -h)
INDEXDB_RNA_OPTS =

# *** Internal ***

SORTMERNA_DBS = $(wildcard $(SORTMERNA_DBPATH)/*.fna)

# MAKECALL_SORTMERNA is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_VERSION     = echo "`date +"%Y-%m-%d %H:%M:%S"`: $@ was made with `sortmerna --version 2>&1 | grep version`" > $@.makecall
MAKECALL_DBFILES     = echo "	Database: $(SORTMERNA_DBS)" >> $@.makecall
MAKECALL_PARAMS      = echo "	Called with parameters: $(SORTMERNA_OPTS)" >> $@.makecall
MAKECALL_INFILES     = echo "	Input files: $^ (`ls -lL $^|tr '\n' ','`)" >> $@.makecall
MAKECALL_SORTMERNA   = $(MAKECALL_VERSION); $(MAKECALL_DBFILES); $(MAKECALL_PARAMS); $(MAKECALL_INFILES)

# *** Targets ***

# Run sortmerna on all fastq files in the current directory
fastq2sortmerna: $(subst .r1.,.sortmerna-al.r1.,$(wildcard *.r1.fastq)) $(subst .r2.,.sortmerna-al.r2.,$(wildcard *.r2.fastq))

# Run sortmerna against all fna files in $(SORTMERNA_DBPATH). Output both the
# aligned and the non-aligned (rejected) sequences to fastq files.
#
# This target requires unzipped fastq files. In makefile.misc there's a pattern
# rule to make unzipped copies of fastq files. I suggest you make such a set
# in the last directory of the qc process in which you ran a program that 
# handled gzipped files and put symlink to the unzipped files here.
SORTMERNA = sortmerna --ref $$reffnas --reads $< --aligned $(basename $@) --other $(subst -al,-rej,$(basename $@)) --fastx $(SORTMERNA_OPTS) 
%.sortmerna-al.r1.fastq: %.r1.fastq
	@$(MAKECALL_SORTMERNA)
	reffnas=`echo $(SORTMERNA_DBS) | sed 's/\([^ ]\+\)\( *\)/\1,\1\2/g' | sed 's/\([^ ]*\.fna,[^ ]\+\).fna\( *\)/\1.index\2/g' | sed 's/ \+/:/g'`; \
	$(SORTMERNA)
	@echo "`date +"%Y-%m-%d %H:%M:%S"`: DONE" >> $@.makecall

%.sortmerna-al.r2.fastq: %.r2.fastq
	@$(MAKECALL_SORTMERNA)
	reffnas=`echo $(SORTMERNA_DBS) | sed 's/\([^ ]\+\)\( *\)/\1,\1\2/g' | sed 's/\([^ ]*\.fna,[^ ]\+\).fna\( *\)/\1.index\2/g' | sed 's/ \+/:/g'`; \
	$(SORTMERNA)
	@echo "`date +"%Y-%m-%d %H:%M:%S"`: DONE" >> $@.makecall

# This creates index files from a nucleotide fasta file. Takes a little while
# to run (several hours for Silva SSURef) and uses only one cpu core.
%.index: %.fna
	indexdb_rna --ref $<,$@ $(INDEXDB_RNA_OPTS)

# Collect statistics, counts, in a file.
#
# Remember to define the SAMPLES macro (variable) somewhere, I suggest in a
# "makefile.commondefs" in the root directory of the project. Include that in
# the Makefile in the current directory together with this one.
sortmerna.stats.long.tsv: $(wildcard *.sortmerna.*.fastq)
	@for sample in $(SAMPLES); do \
	  for t in sortmerna-al sortmerna-rej; do \
	    for r in r1 r2; do \
	      f=$${sample}.*.$${t}.$${r}.fastq; \
	      echo "rrna-filter	$$sample	sortmerna	$${r}-$${t}	$${f}	$$(echo $$(wc -l $${f})/4 | bc)"; \
	    done; \
	  done; \
	done > $@
