# makefile.diamond_bacmet
# #
# # Library makefile to make running DIAMOND simpler against the BacMet database.
# #
# # Include the full path of this file in your Makefile ...
# #
# # Author: diego.brambilla@lnu.se

include makefile.diamond
include makefile.misc

# Set this to suffixes corresponding to the types of files you wish to fetch with some
# of the t$(DIAMOND_DB)ets.
ACCEPTED_SUFFIXES =

#In case you are not using ftp, you can override this macro and paste here the https URL.
HTTP = http://bacmet.biomedicine.gu.se/download/BacMet2_EXP_database.fasta
#IMPORTANT: databases are updated recurrently, so always check the availability of the http

# DIAMOND-BacMet-specific macros
MAKECALL_DIAMOND_BACMET = $(MAKECALL_VERSION); $(MAKECALL_PARAMS); $(MAKECALL_DB_BACMET); $(MAKECALL_INFILES)
MAKECALL_DB_BACMET      = echo "	Database: $(DIAMOND_DB_PATH)/$(DIAMOND_DB) (`ls -lL $(DIAMOND_DB_PATH)/$(DIAMOND_DB).dmnd`)" >> $@.makecall
DIAMOND_ALIGN_OPTS = --id 90 --evalue 0.00001 -f $(OUTFMT) 
OUTFMT= 6

# DIAMOND_DB_PATH sets the directory where to look for generic database files
# like the protein RefSeq. The default is the current directory.
DIAMOND_DB_PATH = .

# Specify this when you want to point to a specific, non-generic, database.
# Full path, without ".dmnd".
DIAMOND_DB = BacMet2_EXP_database

#bacmet.py specific macro: define minimum a.a. alignemnt length threshold
ALENGTH = 37.5

# *** DIAMOND BacMet targets ***

# Fetch the BacMet protein database, and unpack the tar files.
mirror_bacmet:
	wget $(HTTP)

# Creating the database
# From protein sequences in a file ending with .fasta
# (Currently, Diamond only works with protein sequence databases.)
create_db:$(subst .fasta,.dmnd,$(wildcard *.fasta))

# Nucleotides in fastq/fna files against the BacMet protein database
f2bacmet_db.m8s: $(subst .fastq.gz,.bacmet.m8,$(wildcard *.fastq.gz)) $(subst .fna,.bacmet.m8,$(wildcard *.fna))

# parses DIAMOND m8 matrix to get unique tab-separated hits
sort_best_m8: $(subst .bacmet.m8,.bacmet.sort.best.m8, $(wildcard *.bacmet.m8))

#filters out DIAMOND m8 matrix to select hits based on alignment length cutoff (input)
# N.B.: depends on the python script "bacmetg.py" that requires python 3.6*-3.8* (see also required dependencies at the top of the file)
bacmet_alength_filter: $(subst .bacmet.m8,.bacmet.filter.sort.best.m8, $(wildcard *.bacmet.m8))

# parses DIMAOND m8 matrix to get an annotated gene list
sort_bacmet_genelist_tsv: $(subst .bacmet.m8,.genelist.tsv, $(wildcard *.bacmet..m8))


# *** Make rules ***

%.dmnd: %.fasta
	$(MAKECALL_MAKEDB)
	diamond makedb --in $< -d $(basename $@)
	echo "`date +"%Y-%m-%d %H:%M:%S"`: DONE" >> $@.makecall

%.bacmet.m8: %.fastq.gz
	$(MAKECALL_DIAMOND_BACMET)
	diamond blastx -d $(DIAMOND_DB) --query $< -o $@ $(DIAMOND_ALIGN_OPTS)
	echo "`date +"%Y-%m-%d %H:%M:%S"`: DONE" >> $@.makecall

#same pattern for a different target (.fna files)
%.bacmet.m8: %.fna
	$(MAKECALL_DIAMOND_BACMET)
	diamond blastx -d $(DIAMOND_DB) --query $< -o $@ $(DIAMOND_ALIGN_OPTS)
	echo "`date +"%Y-%m-%d %H:%M:%S"`: DONE" >> $@.makecall

%.bacmet.sort.best.m8: %.bacmet.m8
	echo -E "`date +"%Y-%m-%d %H:%M:%S"`: --->sorting $><--"
	sort -u -k1,1 $< | sed 's/|/\t/g' > $@

%.bacmet.filter.sort.best.m8: %.bacmet.sort.best.m8
	echo -E "`date +"%Y-%m-%d %H:%M:%S"`: --->filtering $><--"
	python ../../bin/bacmet.py $< $(ALENGTH) $@

%.genelist.tsv: %.m8
	echo -E "`date +"%Y-%m-%d %H:%M:%S"`: --->sorting $><--"
	cut -f 1,2 $< | sed 's/|/\t/g' | sort -u -k6,6 - > $@

#Create md5sum unique hashes for blast tabular files

all_m8s.gz.md5s: $(subst .m8.gz,.m8.gz.md5,$(wildcard *.m8.gz))

%.m8.gz.md5: %.m8.gz
	md5sum $< > $@
 
