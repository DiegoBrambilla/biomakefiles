# makefile.sickle
#
# Library makefile to make running the sickle trimming program simpler.
#
# Include the full path of this file in your Makefile, override parameter
# macros if needed and you're ready to go.
#
# Author: __AUTHOR_EMAIL__

SHELL := /bin/bash

# *** Parameters ***

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.
#
SICKLE_OPTS = -t sanger

# *** Internal ***

# MAKECALL__NNN__ is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_VERSION     = echo "`date +"%Y-%m-%s %H:%M:%S"`: $@ was made with `sickle --version|grep 'sickle version'`" > $@.makecall
MAKECALL_PARAMS      = echo "	Called with parameters: $(SICKLE_OPTS)" >> $@.makecall
MAKECALL_INFILES     = echo "	Input files: $^ (`ls -l $^|tr '\n' ','`)" >> $@.makecall
MAKECALL_SICKLE      = $(MAKECALL_VERSION); $(MAKECALL_PARAMS); $(MAKECALL_INFILES)

# *** Targets ***

# Target to run sickle in pe mode on all fastq files in the directory.
#
# Since you will create new files with the same suffixes as the old ones: DON'T
# RUN TWICE!
fastq.gz2pesickle: $(subst .r1.fastq.gz,.pesickle,$(filter-out pesickle,$(wildcard *.r1.fastq.gz)))

# Target for a single pair of files. To mark that the target is done, an empty
# file with .pesickle suffix is created.
%.pesickle: %.r1.fastq.gz %.r2.fastq.gz
	$(MAKECALL_SICKLE)
	sickle pe -f $(word 1,$^) -r $(word 2,$^) -g $(SICKLE_OPTS) \
	  -o $(basename $@).pesickle.r1.fastq.gz \
	  -p $(basename $@).pesickle.r2.fastq.gz \
	  -s $(basename $@).pesickle.single.fastq.gz
	echo "`date +"%Y-%m-%s %H:%M:%S"`: DONE" >> $@.makecall
	touch $@

pesickle.stats.long.tsv: $(wildcard *.pesickle.r1.fastq.gz)
	@for sample in $(basename $(basename $(basename $(basename $^)))); do \
	  echo "$$sample	pesickle	r1	$$sample.pesickle.r1.fastq.gz	$$(echo $$(gunzip -c $$sample.pesickle.r1.fastq.gz | wc -l)/4 | bc)"; \
	  echo "$$sample	pesickle	r2	$$sample.pesickle.r2.fastq.gz	$$(echo $$(gunzip -c $$sample.pesickle.r2.fastq.gz | wc -l)/4 | bc)"; \
	  echo "$$sample	pesickle	single	$$sample.pesickle.single.fastq.gz	$$(echo $$(gunzip -c $$sample.pesickle.single.fastq.gz | wc -l)/4 | bc)"; \
	done | sort | tee $@
